name: CI

on:
  push:
  pull_request:
  workflow_dispatch:
    inputs:
      type:
        description: 'Type (edge/proxy)'
        default: 'proxy'
        required: true

jobs:
  variables:
    runs-on: ubuntu-latest
    outputs:
      ARCH_LIST: ${{ env.ARCH_LIST }}
      ADDON_LIST: ${{ env.ADDON_LIST }}
      DOCKER_ARGS: ${{ env.DOCKER_ARGS }}
    steps:
    - uses: actions/checkout@v3
    - name: "ARGS: home-assistant-addon-proxy" # Build of addon proxy version
      if: github.ref == 'refs/heads/master' && (github.event_name == 'workflow_dispatch' && github.event.inputs.type == 'proxy')
      run: |
        echo "ADDON_LIST=['home-assistant-addon-proxy']" >> $GITHUB_ENV
        echo "DOCKER_ARGS=--no-cache" >> $GITHUB_ENV
    - name: Determine arch
      id: determine_arch
      run: |
        ARCH_LIST=$(jq -r -c '.arch' ./${{ fromJSON(env.ADDON_LIST)[0] }}/config.json)
        echo "Found the following arches: $ARCH_LIST"
        echo "ARCH_LIST=$ARCH_LIST" >> $GITHUB_ENV

  build:
    runs-on: ubuntu-latest
    needs: variables
    env:
      DOCKER_ARGS: ${{needs.variables.outputs.DOCKER_ARGS}}
    strategy:
      matrix:
        arch: ${{fromJSON(needs.variables.outputs.ARCH_LIST)}}
        addon: ${{fromJSON(needs.variables.outputs.ADDON_LIST)}}
    steps:
    - uses: actions/checkout@v3
    - name: Docker login
      if: (github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags/')) && (github.event_name == 'push' || github.event_name == 'workflow_dispatch')
      run: echo ${{ secrets.DOCKER_KEY }} | docker login -u koenkk --password-stdin
    - name: Build
      run: |
        if [ "${{ matrix.addon }}" != "home-assistant-addon-proxy" ]; then
          cp -R common/rootfs ${{ matrix.addon }}
          cp common/Dockerfile ${{ matrix.addon }}
        fi
        cp common/build.yaml ${{ matrix.addon }}
        docker run --rm --privileged \
            -v /home/runner/.docker:/root/.docker \
            -v /run/docker.sock:/run/docker.sock:rw \
            -v $(pwd)/${{ matrix.addon }}:/data homeassistant/amd64-builder --${{ matrix.arch }} -t /data \
            ${{ env.DOCKER_ARGS }}
